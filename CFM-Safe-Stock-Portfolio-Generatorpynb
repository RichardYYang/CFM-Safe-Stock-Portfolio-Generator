{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from IPython.display import display, Math, Latex\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import numpy_financial as npf\n",
    "import yfinance as yf\n",
    "import matplotlib.pyplot as plt\n",
    "from datetime import datetime\n",
    "import concurrent.futures"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Group Assignment\n",
    "### Team Number: 11\n",
    "### Team Member Names: Richard Yang, William Zhang, Soham Basu\n",
    "### Team Strategy Chosen: SAFE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Extract all the tickers from the csv file\n",
    "# Use loop to append tickers into a empty list called tickers_lst one by one\n",
    "givenTickers = pd.read_csv('Tickers.csv')\n",
    "tickers_lst = []\n",
    "for i in range(len(givenTickers)):\n",
    "    tickers_lst.append(givenTickers.iloc[i, 0])\n",
    "\n",
    "\n",
    "# Function outputs true if the stock is in USD, otherwise false\n",
    "# The parameter is a string representing the ticker name\n",
    "def currencyUSD(stock):\n",
    "    if stock.info['currency'] == 'USD':\n",
    "        return True\n",
    "    else:\n",
    "        return False\n",
    "\n",
    "# Function outputs true if the stock has a daily average volume of at least 10000 shares in a given time period, otherwise false\n",
    "# The first parameter is a string representing the ticker name, the second and third parameter specify the time period\n",
    "def volume10000(stock, start_date, end_date):\n",
    "    hist = stock.history(start=start_date, end=end_date)\n",
    "    if hist['Volume'].mean() >= 10000:\n",
    "        return True\n",
    "    else:\n",
    "        return False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create an empty list filterTickers, then filter out stocks that meet the following requirements:\n",
    "# 1. It is a US listed stock\n",
    "# 2. Has a daily average volume of at least 10000 shares from July 02, 2021 to October 22, 2021\n",
    "filterTickers = []\n",
    "start_date = '2021-07-02'\n",
    "end_date = '2021-10-22'\n",
    "\n",
    "# The parameter is a string\n",
    "# This function will firstly check if the ticker is valid or not(we use .info['regularMarketPrice'] to do that)\n",
    "# Once the ticker is valid, the function will check whether the stock meet BOTH two requirements stated above\n",
    "# If the ticker meets all the requriements, the function will append this ticker into \"filterTicker\" list\n",
    "\n",
    "\n",
    "def filterStocks(ticker):\n",
    "    stock = yf.Ticker(ticker)\n",
    "    if stock.info['regularMarketPrice'] is not None:\n",
    "        if currencyUSD(stock) & volume10000(stock, start_date, end_date):\n",
    "            filterTickers.append(ticker)\n",
    "\n",
    "#NEW CODE -- Used for threading \n",
    "with concurrent.futures.ThreadPoolExecutor() as executor:\n",
    "    executor.map(filterStocks, tickers_lst)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#NEW CODE\n",
    "#Removes duplicates in list of tickers\n",
    "filterTickers = list(dict.fromkeys(filterTickers))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Volatility/Standard Deviation: \n",
    "\n",
    "Weight: 45% \n",
    "\n",
    "Volatility maps how much a stock deviates over a certain period. The stocks that have lower volatility deviate less. The less a stock deviates, the safer it is. The reason volatility has such a high weighting in our overall score is because of its ability to weed out the riskiest stocks from our portfolio by assigning them a low score. We were also aiming to find a balance between volatility in the short-term and long-term. The pandemic has had a major impact on stock prices over the last 2 years, which is why we also wanted to look at historical data over the last 10 years to get a bigger picture. That is why our final volatility calculates a weighted average of the volatility over the last 2 years, worth 25%, and the volatility over the last 10 years, worth 75% of the final volatility.  \n",
    "\n",
    " \n",
    "\n",
    "Sharpe Ratio: \n",
    "\n",
    "Weight: 40% \n",
    "\n",
    "Sharpe ratio is a way to measure how much return an investor can get per unit of risk. It takes both the average return and standard deviation into account. This allows us to look at whether the stock is worth buying. One potential dilemma with the sharpe ratio is that a stock with a low return and volatility has the same sharpe ratio as a stock with a high return and high volatility. Since we are trying to build a portfolio of safe stocks, it is important that we get rid of most stocks with high volatilities. In our portfolio, we can do this by giving standard deviation a high weighting, allowing it to weed out the riskiest of stocks. Once again, in order to get a balance between sharpe ratio in the short-term and sharpe ratio in the long term, we calculated mean return using a weighted average of the return over the last 2 years, worth 25%, and the return over the last 10 years, worth 75%.  \n",
    "\n",
    " \n",
    "\n",
    "Covariance: \n",
    "\n",
    "Weight: 10% \n",
    "\n",
    "We choose stocks which have high covariance with S&P 500. This is to find stocks that basically follow the market trend. That means the stocks do not have high non-systematic risk. Since the market index like S&P 500 normally has low volatility, stocks chosen based on this criterion will be safe.  \n",
    "\n",
    " \n",
    "\n",
    "Moving Price Average: \n",
    "\n",
    "Weight: 5% \n",
    "\n",
    "The reason for looking at the Two Hundred Moving Price Average is simply to get another indicator to see how safe the stock is. The closer a stock is to its moving price average, the more likely that it is a safer stock as it likely deviates less than other, more riskier stocks. Of course, a really risky stock could just happen to be very close to its moving price average; however, when combined with other indicators such as volatility and covariance, moving price average is a good way of finding safe stocks.  \n",
    "\n",
    " \n",
    "\n",
    "We wanted to use a variety of indicators such as volatility, sharpe ratio, covariance with the S&P 500 index, and moving price average. In addition, the data used to calculate many of these indicators aimed to strike a balance between the short-term stock history and long-term stock history. This helps to diversify our indicators and allows us to pick better stocks. Say for example, a stock gets a poor correlation with the S&P 500. If other factors such as volatility and moving price average show that the stock is safe, then it has a high chance of still being included in our portfolio. We decided the weights for each indicator based on how well each indicator can predict how safe a stock is. Multiple portfolios have been generated using different weights for the indicators, and this was found to be the optimal weighting. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# uses factors such as a stock's volatility/standard deviation, sharpe ratio, covariance, and moving price average\n",
    "# to assign each stock a score\n",
    "# the higher the score, the safer the stock is and the better it is for our portfolio\n",
    "def calculateScore(stockInfo, stockHist_2, stockHist_10, price, indexHist):\n",
    "\n",
    "    # finds volatility (standard deviation) using the daily log returns in terms of percentage, \n",
    "    # and finds the volatility as an annual percentage\n",
    "    stockHist_2['Log returns'] = np.log(stockHist_2['Close'] / stockHist_2['Close'].shift())\n",
    "    volatility_2 = stockHist_2['Log returns'].std() * 252 ** 0.5\n",
    "    stockHist_10['Log returns'] = np.log(stockHist_10['Close'] / stockHist_10['Close'].shift())\n",
    "    volatility_10 = stockHist_10['Log returns'].std() * 252 ** 0.5\n",
    "    # calculates a weighted average for volatility based on the average volatility over the last 2 years\n",
    "    # and over the last 10 years\n",
    "    # volatility over last 2 years: 25%, volatility over last 10 years: 75%\n",
    "    volatility = ((volatility_2 * 0.25) + (volatility_10 * 0.75))\n",
    "    \n",
    "    # calculates the average return of the stock\n",
    "    meanReturn_2 = stockHist_2['Log returns'].mean() * 252\n",
    "    meanReturn_10 = stockHist_10['Log returns'].mean() * 252\n",
    "    # finds a weighted average for return based on the average return over the last 2 years and \n",
    "    # over the last 10 years\n",
    "    # return over last 2 years: 25%, return over last 10 years: 75%\n",
    "    meanReturn = (meanReturn_2 * 0.25) + (meanReturn_10 * 0.75)\n",
    "    # uses mean return and volatility to calculate sharpe ratio\n",
    "    # assumes risk-free rate of return is 0\n",
    "    sharpeRatio = meanReturn / volatility\n",
    "\n",
    "    # finds covariance by comparing the stock to the S&P 500 index using data over the last 10 years\n",
    "    # organizes price data\n",
    "    prices = pd.DataFrame(stockHist_10['Close'])\n",
    "    prices.columns = ['Stock']\n",
    "    prices['index'] = indexHist['Close']\n",
    "    # calculates stock's correlation to S&P 500 index\n",
    "    covariance = prices.corr()\n",
    "    corr = float(covariance.iloc[0, 1])\n",
    "\n",
    "    # calculates the stock's percent difference from its Two Hundred Day Moving Average to its current price\n",
    "    price_average = stockInfo[\"twoHundredDayAverage\"]\n",
    "    percent_difference = (price - price_average) / price_average\n",
    "\n",
    "    # uses all 4 factors to assign a final score to each ticker:\n",
    "    # Volatility: 45%\n",
    "    # Sharpe Ratio: 40%\n",
    "    # Correlation: 10%\n",
    "    # Moving Day Price Average: 5%\n",
    "    score = ((1 - volatility) * 0.45) + (sharpeRatio * 0.4) + (corr * 0.1) + ((1 - percent_difference) * 0.05)\n",
    "    return score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "score_lst = []\n",
    "price_lst = []\n",
    "\n",
    "# gets data for each ticker and S&P 500 in order to calculate a score for each stock\n",
    "def getStockData(ticker):\n",
    "    # finds stock data over last 2 and 10 years respectively \n",
    "    stock = yf.Ticker(ticker)\n",
    "    stockInfo = stock.info\n",
    "    stockHist_2 = stock.history(period=\"2y\")\n",
    "    stockHist_10 = stock.history(period=\"10y\")\n",
    "    # gets the stock's current price and appends it to a list of prices\n",
    "    price = stock.history(start=\"2021-11-26\", end=\"2021-11-27\")\n",
    "    \n",
    "    ### NEW CODE(price[\"Close\"] is a dataframe, so we use a float to convert it to a number)\n",
    "    price = float(price[\"Close\"])\n",
    "    \n",
    "    price_lst.append(price)\n",
    "    # finds data for S&P 500 index over last 10 years\n",
    "    index = yf.Ticker('^GSPC')\n",
    "    indexHist = index.history(period=\"10y\")  # Time period used to calculate the covariance\n",
    "    # calculates a final score for each stock and appends it to a list of scores\n",
    "    score_lst.append(calculateScore(stockInfo, stockHist_2, stockHist_10, price, indexHist))\n",
    "\n",
    "for ticker in filterTickers:\n",
    "    getStockData(ticker)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Already get one list of tickers(filterTickers), and one list of score(score_lst), and one list of current prices of those stocks\n",
    "# We want to find the 20 stocks with the highest score, and find their corresponding current price and give them the weight\n",
    "# create one list to store the stock with highest score to the stock with the 20th highest score (chosen_tickers)\n",
    "# the weight should be (6.9%+6.7%+ ...3.3%+3.1%=100%), corresponding to stocks of highest score to stocks of lowest score(among 20 stocks we choose)\n",
    "# In list \"chosen_weights\", there will be a list of numbers from 0.069, to 0.031(20 numbers)\n",
    "# Then get the corresponding current price for those 20 stocks\n",
    "\n",
    "chosen_tickers = []\n",
    "chosen_weights = []\n",
    "chosen_prices = []\n",
    "chosen_scores = []\n",
    "maxWeight=0.069\n",
    "\n",
    "#NEW CODE -- Just Variables\n",
    "#saving these values to a different variable as we will need to drop some of the elements\n",
    "save_score_lst=score_lst.copy()\n",
    "save_price_lst=price_lst.copy()\n",
    "save_filterTickers=filterTickers.copy()\n",
    "\n",
    "for i in range(20):\n",
    "    max_score = max(score_lst)\n",
    "    max_index = score_lst.index(max_score)\n",
    "    chosen_tickers.append(filterTickers[max_index])\n",
    "    chosen_weights.append(maxWeight)\n",
    "    chosen_prices.append(price_lst[max_index])\n",
    "    chosen_scores.append(score_lst[max_index])\n",
    "    score_lst.pop(max_index)\n",
    "    filterTickers.pop(max_index)\n",
    "    price_lst.pop(max_index)\n",
    "    maxWeight -= 0.002\n",
    "    maxWeight = round(maxWeight, 3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[-0.7116548051316365,\n",
       " 0.6275531458620517,\n",
       " 0.8300663471692176,\n",
       " 0.7682272531657961,\n",
       " -0.3486548803092665,\n",
       " 0.5996640028954461,\n",
       " 0.7964501504718483,\n",
       " 0.6120931725881906,\n",
       " 0.6739880426948244,\n",
       " 0.7515579444092831,\n",
       " 0.6346436496132126,\n",
       " 0.7035490723969852,\n",
       " 0.8422990901460922,\n",
       " 0.6929852303755425,\n",
       " 0.6379486894400106,\n",
       " 0.5875895544515148,\n",
       " 0.9358165421658273,\n",
       " 0.6701872213210425,\n",
       " 0.41137096074376406,\n",
       " -0.3041133832319472,\n",
       " 0.7700994901392277,\n",
       " 0.22038162881922976,\n",
       " 0.10963726117105799,\n",
       " 0.6919099693112162,\n",
       " 0.7091724481092008,\n",
       " 0.6276256075132944,\n",
       " 0.37075967603299953]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "save_score_lst"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/richa/opt/anaconda3/lib/python3.8/site-packages/pandas/core/indexing.py:1732: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._setitem_single_block(indexer, value, name)\n"
     ]
    }
   ],
   "source": [
    "# Starting value of $100,000\n",
    "initial_investment=100000\n",
    "# Create a dataframe called FinalPortfolio by using the list chosen_tickers\n",
    "FinalPortfolio = pd.DataFrame(chosen_tickers)\n",
    "# Change the column name\n",
    "FinalPortfolio.columns=[\"Ticker\"]\n",
    "# Add another column, the current price of each stock, into the dataframe\n",
    "FinalPortfolio[\"Price\"]=chosen_prices\n",
    "chosen_weights=list(chosen_weights)\n",
    "FinalPortfolio['Shares']=0\n",
    "FinalPortfolio\n",
    "for i in range(len(FinalPortfolio['Price'])):\n",
    "    FinalPortfolio[\"Shares\"].iloc[i]=initial_investment/FinalPortfolio[\"Price\"].iloc[i]*chosen_weights[i]\n",
    "FinalPortfolio['Value']=FinalPortfolio[\"Shares\"]*FinalPortfolio[\"Price\"]\n",
    "FinalPortfolio['Weight']=chosen_weights\n",
    "FinalPortfolio.index = np.arange(1,len(FinalPortfolio)+1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your total overall portfolio weighting is 1.0\n",
      "Your total overall value weighting is $100000.0\n"
     ]
    }
   ],
   "source": [
    "#Creating variable for total portfoliio weight to confirm the total weight is 100\n",
    "totalWeight=FinalPortfolio[\"Weight\"].sum()\n",
    "print(\"Your total overall portfolio weighting is \" + str(totalWeight))\n",
    "#creating variable for overall portfolio value to confirm it is $100000\n",
    "totalValue=FinalPortfolio['Value'].sum()\n",
    "print(\"Your total overall value weighting is $\" + str(totalValue))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "######## Creating the portfolio \n",
    "# The input is a DataFrame containing columns Ticker, Price, Shares, Value, Weight(eg FinalPortfolio)\n",
    "# The function outputs another DataFrame containing only the portfolio value created by the input stocks and back in 3 years\n",
    "# We make the initial investment to be $100,000 three years ago, and track the portfolio value change back in the past 3 years\n",
    "def portfoliovalue(finalportfolio):\n",
    "    PortfolioHistory=pd.DataFrame()\n",
    "    PortfolioValue=pd.DataFrame()\n",
    "    shares=0\n",
    "    for i in range(len(finalportfolio)):\n",
    "        stock = yf.Ticker(finalportfolio.iloc[i, 0])\n",
    "        stockHist_3=stock.history(period='3y').resample('MS').first()\n",
    "        shares=initial_investment/stockHist_3.Close[0]*chosen_weights[i]\n",
    "        PortfolioHistory[finalportfolio.iloc[i, 0]] = stockHist_3.Close*shares\n",
    "    PortfolioValue[\"Value\"] = PortfolioHistory.sum(axis=1)\n",
    "    return PortfolioValue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find the 10 stocks with the lowest score and create a dataframe for it(the same as FinalPortfolio)\n",
    "\n",
    "min_chosen_tickers = []\n",
    "min_chosen_prices = []\n",
    "min_chosen_weight = [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]\n",
    "\n",
    "#variable names were replaced with new variables as referenced above as new code\n",
    "for i in range(10):\n",
    "    min_score = min(save_score_lst)\n",
    "    min_index = save_score_lst.index(min_score)\n",
    "    min_chosen_tickers.append(save_filterTickers[min_index])\n",
    "    min_chosen_prices.append(save_price_lst[min_index])\n",
    "    save_score_lst.pop(min_index)\n",
    "    save_filterTickers.pop(min_index)\n",
    "    save_price_lst.pop(min_index)\n",
    "\n",
    "# Starting value of $100,000\n",
    "initial_investment=100000\n",
    "# Create a dataframe called riskyPortfolio by using the list chosen_tickers\n",
    "riskyPortfolio = pd.DataFrame(min_chosen_tickers)\n",
    "# Change the column name\n",
    "riskyPortfolio.columns=[\"Ticker\"]\n",
    "# Add another column, the current price of each stock, into the dataframe\n",
    "riskyPortfolio[\"Price\"]=min_chosen_prices\n",
    "riskyPortfolio['Shares']=0\n",
    "min_chosen_weight = list(min_chosen_weight)\n",
    "for i in range(len(riskyPortfolio['Price'])):\n",
    "    riskyPortfolio[\"Shares\"].iloc[i]=initial_investment/riskyPortfolio[\"Price\"].iloc[i]*min_chosen_weight[i]\n",
    "riskyPortfolio['Value']=riskyPortfolio[\"Shares\"]*riskyPortfolio[\"Price\"]\n",
    "riskyPortfolio['Weight']=min_chosen_weight\n",
    "riskyPortfolio.index = np.arange(1,len(riskyPortfolio)+1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our portfolio, consisting of the stocks with the highest 20 scores, focuses on maintaining a low volatility/standard deviation as that indicator makes up 45% of our portfolio and has further influence in  the calculation of the sharpe ratio. Therefore, as the data proves, our portfolio has a much lower volatility than the ten worst performing stocks in the list of tickers, calculated based off our four indicators for safe stocks. In addition our sharp ratio is much higher for our Final Portfolio compared to the portfolio of the stocks with the ten lowest scores due to factoring the sharpe ratio values into our model as can be seen below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For the FinalPortfolio, the standard deviation is 0.06466397903347028 , and the Sharpe ratio is 0.4056279678902342 .\n"
     ]
    }
   ],
   "source": [
    "Standard_deviation_FinalPortfolio = portfoliovalue(FinalPortfolio).pct_change().std()\n",
    "Sharpe_ratio_FinalPortfolio = portfoliovalue(FinalPortfolio).pct_change().mean() / portfoliovalue(FinalPortfolio).pct_change().std()\n",
    "print(\"For the FinalPortfolio, the standard deviation is\",float(Standard_deviation_FinalPortfolio),\", and the Sharpe ratio is\", float(Sharpe_ratio_FinalPortfolio),\".\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For a riskier portfolio with equal weightings for the stocks with the 10 lowest scores, the standard deviation is 0.07865883753070432 , and the Sharpe ratio is -0.30243790815385313 .\n"
     ]
    }
   ],
   "source": [
    "Standard_deviation_riskyPortfolio = portfoliovalue(riskyPortfolio).pct_change().std()\n",
    "Sharpe_ratio_riskyPortfolio = portfoliovalue(riskyPortfolio).pct_change().mean() / portfoliovalue(riskyPortfolio).pct_change().std()\n",
    "print(\"For a riskier portfolio with equal weightings for the stocks with the 10 lowest scores, the standard deviation is\",float(Standard_deviation_riskyPortfolio), \", and the Sharpe ratio is\", float(Sharpe_ratio_riskyPortfolio),\".\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also check the standard deviation and Sharpe ratio of S&P 500 as benchmarks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For the S&P 500, the standard deviation is 0.057011078296065894 , and the Sharpe ratio is 0.32782877832348484 .\n"
     ]
    }
   ],
   "source": [
    "SP500 = yf.Ticker('^GSPC')\n",
    "SP500hist = SP500.history(period='3y').resample('MS').first()\n",
    "\n",
    "Standard_deviation_SP500hist = SP500hist.Close.pct_change().std()\n",
    "Sharpe_ratio_SP500hist = SP500hist.Close.pct_change().mean()/SP500hist.Close.pct_change().std()\n",
    "print(\"For the S&P 500, the standard deviation is\",float(Standard_deviation_SP500hist),\", and the Sharpe ratio is\", float(Sharpe_ratio_SP500hist),\".\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beta:\n",
      "                 Final Portfolio     ^GSPC\n",
      "Final Portfolio         1.325158  1.077987\n",
      "^GSPC                   1.077987  1.000000\n",
      "The Final Portfolio Beta is:  1.0779870047681888\n",
      "The Beta of the Market is:  0.9999999999999998\n"
     ]
    }
   ],
   "source": [
    "#calculating the beta\n",
    "MarketIndex='^GSPC' #This is the symbol yfinance uses for the S&P 500\n",
    "Ticker2 = yf.Ticker(MarketIndex)\n",
    "\n",
    "#putting start and end date for getting s and p 500\n",
    "start_date = '2017-01-01'\n",
    "end_date = '2021-11-26'\n",
    "\n",
    "MarketIndex_hist = Ticker2.history(start=start_date, end=end_date)\n",
    "MarketIndex_hist= MarketIndex_hist.resample('MS').first()\n",
    "#putting value/price of s and p 500 and final portfolio in one dataframe\n",
    "prices = pd.DataFrame(portfoliovalue(FinalPortfolio)['Value'])\n",
    "prices.columns = [\"Final Portfolio\"]\n",
    "prices[MarketIndex] = MarketIndex_hist['Close']\n",
    "prices.drop(index=prices.index[0], inplace=True)\n",
    "\n",
    "#calculating percentage change and dropping the first value\n",
    "monthly_returns=prices.resample('MS').ffill().pct_change()\n",
    "monthly_returns.drop(index=monthly_returns.index[0], inplace=True)\n",
    "\n",
    "#calculating the market variance \n",
    "MarketVar= monthly_returns[MarketIndex].var()\n",
    "\n",
    "\n",
    "#calculating beta by taking a covariance \n",
    "Beta=monthly_returns.cov()/MarketVar\n",
    "print(\"Beta:\")\n",
    "print(Beta)\n",
    "\n",
    "\n",
    "print('The Final Portfolio Beta is: ', Beta.iat[0,1])\n",
    "print('The Beta of the Market is: ', Beta.iat[1,1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Graph for correlation:  \n",
    "\n",
    "This is an example of a stock and its correlation with the S and P 500 in our portfolio. Based on its movements, it seems to be positively correlated with the S and P 500 although not completely. Stocks with similar trajectories to the S and P 500’s movements may suggest that they are safer and less volatile as it has similar trends with the index.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1440x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation:\n",
      "           COST     ^GSPC\n",
      "COST   1.000000  0.560694\n",
      "^GSPC  0.560694  1.000000\n"
     ]
    }
   ],
   "source": [
    "# Example of correlation between a stock in our portfolio and S&P 500\n",
    "Stock1=chosen_tickers[0]\n",
    "Stock2='^GSPC'\n",
    "Ticker1 = yf.Ticker(Stock1)\n",
    "Ticker2 = yf.Ticker(Stock2)\n",
    "\n",
    "# Look at past 10 years\n",
    "start_date = '2011-11-26'\n",
    "end_date = '2021-11-26'\n",
    "\n",
    "#get stock history\n",
    "Stock1_hist = Ticker1.history(start=start_date, end=end_date)\n",
    "Stock2_hist = Ticker2.history(start=start_date, end=end_date)\n",
    "\n",
    "#get close prices\n",
    "prices = pd.DataFrame(Stock1_hist['Close'])\n",
    "prices.columns = [Stock1]\n",
    "prices[Stock2] = Stock2_hist['Close']\n",
    "prices.head()\n",
    "\n",
    "#Calculate the monthly returns from the price dataFrame.\n",
    "monthly_returns=prices.resample('MS').first().pct_change()\n",
    "monthly_returns.drop(index=monthly_returns.index[0], inplace=True)\n",
    "monthly_returns.head()\n",
    "\n",
    "#plot graph\n",
    "plt.figure(figsize=(20,15))\n",
    "\n",
    "#plot the lines\n",
    "plt.plot(monthly_returns.index,monthly_returns[Stock1], color='b', label=Stock1)\n",
    "plt.plot(monthly_returns.index,monthly_returns[Stock2], color='r', label=Stock2)\n",
    "\n",
    "#legend\n",
    "plt.legend(loc='best')\n",
    "\n",
    "#titles and labels\n",
    "plt.title(\"Comparison in Percentage Change of S and P 500 vs \" + str(Stock1))\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Percent Change (%)')\n",
    "\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# create new cell\n",
    "print('Correlation:')\n",
    "print(monthly_returns.corr())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Graph for overall portfolio: \n",
    "\n",
    "As you can see our portfolio generally has had a similar trend compared to the S and P 500 in the past 3 years, suggesting that our portfolio is quite safe with most of non-systematic risk removed. It supports our constructed models in creating a safe portfolio. Generally the growth is overall quite smooth with very little abrupt movements. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#graphing our final portfolio vs S and P 500 vs a portfolio containing the 10 stocks with the lowest scores\n",
    "\n",
    "#Market index value recalculated with initial investment\n",
    "MarketIndex_hist=Ticker2.history(period='3y').resample('MS').first()\n",
    "MarketIndexShares=initial_investment/MarketIndex_hist.Close[0]\n",
    "#History for recalculated shares of market index\n",
    "MarketIndexNewHist=pd.DataFrame(MarketIndex_hist.Close*MarketIndexShares)\n",
    "MarketIndexNewHist.columns=[\"Value\"]\n",
    "\n",
    "#creating the graphs\n",
    "plt.plot(portfoliovalue(FinalPortfolio).index, portfoliovalue(FinalPortfolio)['Value'], marker='o', label='Final Portfolio')\n",
    "plt.plot(MarketIndexNewHist.index, MarketIndexNewHist['Value'], marker='o', label='Market Index')\n",
    "#labels\n",
    "plt.title('Final Portfolio Value Compared to Recalculated S and P 500')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Value')\n",
    "plt.xticks(rotation=50)\n",
    "#legend\n",
    "plt.legend(loc='best')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>Price</th>\n",
       "      <th>Shares</th>\n",
       "      <th>Value</th>\n",
       "      <th>Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>COST</td>\n",
       "      <td>546.130005</td>\n",
       "      <td>12.634354</td>\n",
       "      <td>6900.0</td>\n",
       "      <td>0.069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>GOOG</td>\n",
       "      <td>2856.120117</td>\n",
       "      <td>2.345840</td>\n",
       "      <td>6700.0</td>\n",
       "      <td>0.067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AMZN</td>\n",
       "      <td>3504.560059</td>\n",
       "      <td>1.854726</td>\n",
       "      <td>6500.0</td>\n",
       "      <td>0.065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LOW</td>\n",
       "      <td>247.690002</td>\n",
       "      <td>25.435019</td>\n",
       "      <td>6300.0</td>\n",
       "      <td>0.063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>PEP</td>\n",
       "      <td>160.058426</td>\n",
       "      <td>38.111083</td>\n",
       "      <td>6100.0</td>\n",
       "      <td>0.061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ABBV</td>\n",
       "      <td>115.313416</td>\n",
       "      <td>51.164905</td>\n",
       "      <td>5900.0</td>\n",
       "      <td>0.059</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>SHOP</td>\n",
       "      <td>1576.699951</td>\n",
       "      <td>3.615146</td>\n",
       "      <td>5700.0</td>\n",
       "      <td>0.057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ORCL</td>\n",
       "      <td>91.988274</td>\n",
       "      <td>59.790230</td>\n",
       "      <td>5500.0</td>\n",
       "      <td>0.055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>CMCSA</td>\n",
       "      <td>50.848225</td>\n",
       "      <td>104.231761</td>\n",
       "      <td>5300.0</td>\n",
       "      <td>0.053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>CSCO</td>\n",
       "      <td>54.349735</td>\n",
       "      <td>93.836704</td>\n",
       "      <td>5100.0</td>\n",
       "      <td>0.051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>PYPL</td>\n",
       "      <td>187.789993</td>\n",
       "      <td>26.092977</td>\n",
       "      <td>4900.0</td>\n",
       "      <td>0.049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>BAC</td>\n",
       "      <td>45.540802</td>\n",
       "      <td>103.204155</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>0.047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>JPM</td>\n",
       "      <td>160.965149</td>\n",
       "      <td>27.956362</td>\n",
       "      <td>4500.0</td>\n",
       "      <td>0.045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>CVS</td>\n",
       "      <td>91.519997</td>\n",
       "      <td>46.984267</td>\n",
       "      <td>4300.0</td>\n",
       "      <td>0.043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>VZ</td>\n",
       "      <td>51.183331</td>\n",
       "      <td>80.104205</td>\n",
       "      <td>4100.0</td>\n",
       "      <td>0.041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>SO</td>\n",
       "      <td>62.040001</td>\n",
       "      <td>62.862668</td>\n",
       "      <td>3900.0</td>\n",
       "      <td>0.039</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>BK</td>\n",
       "      <td>56.750000</td>\n",
       "      <td>65.198238</td>\n",
       "      <td>3700.0</td>\n",
       "      <td>0.037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>AXP</td>\n",
       "      <td>156.427399</td>\n",
       "      <td>22.374597</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>0.035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>SQ</td>\n",
       "      <td>212.080002</td>\n",
       "      <td>15.560166</td>\n",
       "      <td>3300.0</td>\n",
       "      <td>0.033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>GM</td>\n",
       "      <td>60.169998</td>\n",
       "      <td>51.520693</td>\n",
       "      <td>3100.0</td>\n",
       "      <td>0.031</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Ticker        Price      Shares   Value  Weight\n",
       "1    COST   546.130005   12.634354  6900.0   0.069\n",
       "2    GOOG  2856.120117    2.345840  6700.0   0.067\n",
       "3    AMZN  3504.560059    1.854726  6500.0   0.065\n",
       "4     LOW   247.690002   25.435019  6300.0   0.063\n",
       "5     PEP   160.058426   38.111083  6100.0   0.061\n",
       "6    ABBV   115.313416   51.164905  5900.0   0.059\n",
       "7    SHOP  1576.699951    3.615146  5700.0   0.057\n",
       "8    ORCL    91.988274   59.790230  5500.0   0.055\n",
       "9   CMCSA    50.848225  104.231761  5300.0   0.053\n",
       "10   CSCO    54.349735   93.836704  5100.0   0.051\n",
       "11   PYPL   187.789993   26.092977  4900.0   0.049\n",
       "12    BAC    45.540802  103.204155  4700.0   0.047\n",
       "13    JPM   160.965149   27.956362  4500.0   0.045\n",
       "14    CVS    91.519997   46.984267  4300.0   0.043\n",
       "15     VZ    51.183331   80.104205  4100.0   0.041\n",
       "16     SO    62.040001   62.862668  3900.0   0.039\n",
       "17     BK    56.750000   65.198238  3700.0   0.037\n",
       "18    AXP   156.427399   22.374597  3500.0   0.035\n",
       "19     SQ   212.080002   15.560166  3300.0   0.033\n",
       "20     GM    60.169998   51.520693  3100.0   0.031"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "FinalPortfolio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ticker</th>\n",
       "      <th>Shares</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>COST</td>\n",
       "      <td>12.634354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>GOOG</td>\n",
       "      <td>2.345840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AMZN</td>\n",
       "      <td>1.854726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LOW</td>\n",
       "      <td>25.435019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>PEP</td>\n",
       "      <td>38.111083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ABBV</td>\n",
       "      <td>51.164905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>SHOP</td>\n",
       "      <td>3.615146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ORCL</td>\n",
       "      <td>59.790230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>CMCSA</td>\n",
       "      <td>104.231761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>CSCO</td>\n",
       "      <td>93.836704</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>PYPL</td>\n",
       "      <td>26.092977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>BAC</td>\n",
       "      <td>103.204155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>JPM</td>\n",
       "      <td>27.956362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>CVS</td>\n",
       "      <td>46.984267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>VZ</td>\n",
       "      <td>80.104205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>SO</td>\n",
       "      <td>62.862668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>BK</td>\n",
       "      <td>65.198238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>AXP</td>\n",
       "      <td>22.374597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>SQ</td>\n",
       "      <td>15.560166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>GM</td>\n",
       "      <td>51.520693</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Ticker      Shares\n",
       "1    COST   12.634354\n",
       "2    GOOG    2.345840\n",
       "3    AMZN    1.854726\n",
       "4     LOW   25.435019\n",
       "5     PEP   38.111083\n",
       "6    ABBV   51.164905\n",
       "7    SHOP    3.615146\n",
       "8    ORCL   59.790230\n",
       "9   CMCSA  104.231761\n",
       "10   CSCO   93.836704\n",
       "11   PYPL   26.092977\n",
       "12    BAC  103.204155\n",
       "13    JPM   27.956362\n",
       "14    CVS   46.984267\n",
       "15     VZ   80.104205\n",
       "16     SO   62.862668\n",
       "17     BK   65.198238\n",
       "18    AXP   22.374597\n",
       "19     SQ   15.560166\n",
       "20     GM   51.520693"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Stocks=pd.DataFrame(FinalPortfolio[\"Ticker\"])\n",
    "Stocks[\"Shares\"]=FinalPortfolio[\"Shares\"]\n",
    "Stocks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "portfolio_saved_file = Stocks.to_csv('Stocks_Group_11.csv')\n",
    "portfolio_saved_file"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Contribution Declaration\n",
    "\n",
    "The following team members made a meaningful contribution to this assignment:\n",
    "\n",
    "Richard Yang, Soham Basu, William Zhang"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font color='red'> We had originally encountered runtime issues with our submitted code. Therefore, we added threading by replacing our first for loop that produced the list filterTickers as a function (this does not change the actual output of the code, only speeds it up). \n",
    "    \n",
    "The second thing we changed was to account for duplicate tickers in our tickers file, which we did by using the following line of code: \"filterTickers = list(dict.fromkeys(filterTickers))\".\n",
    "    \n",
    "The third thing we changed was the way that our price data was being outputted. Originally, it was outputting the price as a dataframe, which was causing problems calculating the values in score_lst. We have added one line of code that now outputs the closing price on November 26th as a number, which allows score_lst to produce its intended output (a list of numbers that are scores), rather than a list of dataframes. \n",
    "    \n",
    "The fourth thing we changed was storing our original data before we pop the following variables in our for loop to find the top 20 scores in our portfolio (popped values in score_lst, price_lst, and filterTickers). We added new variables to store these original values: (save_score_lst, save_price_lst, save_filterTickers). We then changed our function for calculating the 10 stocks with the lowest score to use these new stored values instead (save_score_lst, save_price_lst, save_filterTickers).\n",
    "</font> "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
